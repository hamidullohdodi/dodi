definitions:
  models.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    type: object
  models.ChangePasswordResponse:
    properties:
      message:
        type: string
    type: object
  models.Comment:
    properties:
      content:
        type: string
      id:
        type: string
      like_count:
        type: integer
      tweet_id:
        type: string
    type: object
  models.CommentRes:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      like_count:
        type: integer
      tweet_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.Comments:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.CommentRes'
        type: array
    type: object
  models.Count:
    properties:
      count:
        type: integer
      description:
        type: string
    type: object
  models.CreateRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      nationality:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.DFollowRes:
    properties:
      follower_id:
        type: string
      following_id:
        type: string
      unfollowed_at:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.FollowReq:
    properties:
      following_id:
        type: string
    type: object
  models.FollowRes:
    properties:
      followed_at:
        type: string
      follower_id:
        type: string
      following_id:
        type: string
    type: object
  models.GetProfileResponse:
    properties:
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      followers_count:
        type: integer
      following_count:
        type: integer
      last_name:
        type: string
      nationality:
        type: string
      phone_number:
        type: string
      posts_count:
        type: integer
      profile_image:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.LikeReq:
    properties:
      tweet_id:
        type: string
    type: object
  models.LikeRes:
    properties:
      liked_at:
        type: string
      tweet_id:
        type: string
      user_id:
        type: string
    type: object
  models.Message:
    properties:
      message:
        type: string
    type: object
  models.Tweet:
    properties:
      content:
        type: string
      created_at:
        type: string
      hashtag:
        type: string
      image_url:
        type: string
      like_count:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
  models.TweetResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      hashtag:
        type: string
      image_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.TweetTitles:
    properties:
      titles:
        items:
          type: string
        type: array
    type: object
  models.Tweets:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      tweets:
        items:
          $ref: '#/definitions/models.TweetResponse'
        type: array
    type: object
  models.URL:
    properties:
      url:
        type: string
    type: object
  models.UpdateAComment:
    properties:
      content:
        type: string
      id:
        type: string
    type: object
  models.UpdateATweet:
    properties:
      content:
        type: string
      hashtag:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.UpdateProfileRequest:
    properties:
      bio:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      nationality:
        type: string
      phone:
        type: string
      phone_number:
        type: string
      profile_image:
        type: string
      username:
        type: string
    type: object
  models.Url:
    properties:
      tweet_id:
        type: string
      url:
        type: string
    type: object
  models.UserResponse:
    properties:
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      nationality:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.Void:
    type: object
  tweet.ReTweetReq:
    properties:
      content:
        type: string
      createdAt:
        type: string
      hashtag:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      likeCount:
        type: integer
      title:
        type: string
      tweet_id:
        type: string
      userId:
        type: string
    type: object
  tweet.TweetResponse:
    properties:
      content:
        type: string
      createdAt:
        type: string
      hashtag:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      like_count:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  user.Followers:
    properties:
      followers:
        items:
          type: string
        type: array
    type: object
  user.Followings:
    properties:
      following:
        items:
          type: string
        type: array
    type: object
  user.UserResponse:
    properties:
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      nationality:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  user.UserResponses:
    properties:
      users:
        items:
          $ref: '#/definitions/user.UserResponse'
        type: array
    type: object
info:
  contact: {}
  description: API for Api-Geteway Service
  title: Api-Geteway service for mini-twitter
  version: "1.0"
paths:
  /admin/change_profile_image_by_id/{user_id}:
    put:
      consumes:
      - application/json
      description: Update the profile image of a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Change profile image
        in: body
        name: ChangeProfileImageById
        required: true
        schema:
          $ref: '#/definitions/models.URL'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Void'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Change User Profile Image
      tags:
      - Admin
  /admin/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create user
        in: body
        name: Create
        required: true
        schema:
          $ref: '#/definitions/models.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Create User
      tags:
      - Admin
  /admin/delete/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Delete User
      tags:
      - Admin
  /admin/get_profile_by_id/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve the profile of a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get User Profile
      tags:
      - Admin
  /admin/update_profile_by_id/{user_id}:
    put:
      consumes:
      - application/json
      description: Update user profile details
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Update user profile
        in: body
        name: UpdateProfileById
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Update User Profile
      tags:
      - Admin
  /comment/add_like/{comment_id}:
    get:
      consumes:
      - application/json
      description: Increment the like count for a comment
      parameters:
      - description: ID of the comment to like
        in: path
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Add a like to a comment
      tags:
      - Comments
  /comment/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a comment by ID
      parameters:
      - description: ID of the comment to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Delete a comment
      tags:
      - Comments
  /comment/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a comment by ID
      parameters:
      - description: ID of the comment to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get a specific comment
      tags:
      - Comments
  /comment/get_all/{tweet_id}:
    get:
      consumes:
      - application/json
      description: Retrieve all comments for a specific tweet
      parameters:
      - description: ID of the tweet to retrieve comments for
        in: path
        name: tweet_id
        required: true
        type: string
      - in: query
        name: tweet_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get all comments for a tweet
      tags:
      - Comments
  /comment/get_user:
    get:
      consumes:
      - application/json
      description: Retrieve all comments made by a specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get all comments by a user
      tags:
      - Comments
  /comment/post:
    post:
      consumes:
      - application/json
      description: Create a new comment for a tweet
      parameters:
      - description: Comment to be created
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Post a new comment
      tags:
      - Comments
  /comment/remove_like/{comment_id}:
    delete:
      consumes:
      - application/json
      description: Decrement the like count for a comment
      parameters:
      - description: ID of the comment to unlike
        in: path
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Remove a like from a comment
      tags:
      - Comments
  /comment/update:
    put:
      consumes:
      - application/json
      description: Update the content of a comment
      parameters:
      - description: Updated comment details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Update an existing comment
      tags:
      - Comments
  /like/add:
    post:
      consumes:
      - application/json
      description: Add a like to a tweet by a user
      parameters:
      - description: Add like request
        in: body
        name: AddLike
        required: true
        schema:
          $ref: '#/definitions/models.LikeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LikeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Add a like to a tweet
      tags:
      - Like
  /like/delete/{tweet_id}:
    delete:
      consumes:
      - application/json
      description: Remove a like from a tweet by a user
      parameters:
      - description: Tweet ID
        in: path
        name: tweet_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LikeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Delete a like from a tweet
      tags:
      - Like
  /like/get_count/{tweet_id}:
    get:
      consumes:
      - application/json
      description: Retrieve the number of likes for a specific tweet
      parameters:
      - description: Tweet ID
        in: path
        name: tweet_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Count'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get the count of likes for a tweet
      tags:
      - Like
  /like/get_most:
    get:
      consumes:
      - application/json
      description: Retrieve tweets with the highest number of likes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get the most liked tweets
      tags:
      - Like
  /like/get_user:
    get:
      consumes:
      - application/json
      description: Retrieve all tweets liked by a specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TweetTitles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get all likes by a user
      tags:
      - Like
  /tweet/add:
    post:
      consumes:
      - application/json
      description: Create a new tweet
      parameters:
      - description: Post tweet
        in: body
        name: PostTweet
        required: true
        schema:
          $ref: '#/definitions/models.Tweet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: PostTweet Tweets
      tags:
      - Tweet
  /tweet/add_image:
    post:
      consumes:
      - application/json
      description: Add an image to a tweet
      parameters:
      - description: Add image to tweet
        in: body
        name: AddImageToTweet
        required: true
        schema:
          $ref: '#/definitions/models.Url'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: AddImageToTweet Tweets
      tags:
      - Tweet
  /tweet/add_up:
    put:
      consumes:
      - application/json
      description: Update an existing tweet
      parameters:
      - description: Update tweet
        in: body
        name: UpdateTweet
        required: true
        schema:
          $ref: '#/definitions/models.UpdateATweet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: UpdateTweet Tweets
      tags:
      - Tweet
  /tweet/get_all:
    get:
      consumes:
      - application/json
      description: Get a list of all tweets with optional filters
      parameters:
      - description: Limit of tweets
        in: query
        name: limit
        type: integer
      - description: Offset of tweets
        in: query
        name: offset
        type: integer
      - description: Hashtag filter
        in: query
        name: hashtag
        type: string
      - description: Title filter
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: GetAllTweets Tweets
      tags:
      - Tweet
  /tweet/get_new:
    get:
      consumes:
      - application/json
      description: Get new tweets for a specific user
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: GetNewTweets Tweets
      tags:
      - Tweet
  /tweet/get_tt/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a specific tweet
      parameters:
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: GetTweet Tweets
      tags:
      - Tweet
  /tweet/re_tweet:
    post:
      consumes:
      - application/json
      description: Retweet a tweet by a user
      parameters:
      - description: Post retweet
        in: body
        name: ReTweet
        required: true
        schema:
          $ref: '#/definitions/tweet.ReTweetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tweet.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: ReTweet Tweets
      tags:
      - Tweet
  /tweet/recommend:
    get:
      consumes:
      - application/json
      description: Get tweet recommendations for a specific user
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: RecommendTweets Tweets
      tags:
      - Tweet
  /tweet/user:
    get:
      consumes:
      - application/json
      description: Get all tweets for a specific user
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: UserTweets Tweets
      tags:
      - Tweet
  /user/change_password:
    put:
      consumes:
      - application/json
      description: Change the password of a user
      parameters:
      - description: Change password
        in: body
        name: ChangePassword
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChangePasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Change User Password
      tags:
      - User
  /user/change_profile_image:
    put:
      consumes:
      - application/json
      description: Update the profile image of a user
      parameters:
      - description: Change profile image
        in: body
        name: ChangeProfileImage
        required: true
        schema:
          $ref: '#/definitions/models.URL'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Void'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Change User Profile Image
      tags:
      - User
  /user/fetch_users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of users with filtering options
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of users per page
        in: query
        name: limit
        type: integer
      - description: Username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Fetch Users
      tags:
      - User
  /user/follow:
    post:
      consumes:
      - application/json
      description: Follow another user
      parameters:
      - description: post user
        in: body
        name: Follow
        required: true
        schema:
          $ref: '#/definitions/models.FollowReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FollowRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Follow User
      tags:
      - User
  /user/get_profile:
    get:
      consumes:
      - application/json
      description: Retrieve the profile of a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get User Profile
      tags:
      - User
  /user/get_user_followers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of followers for a specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Count'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get User Followers
      tags:
      - User
  /user/get_user_follows:
    get:
      consumes:
      - application/json
      description: Retrieve a list of users that a specific user is following
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Count'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Get User Follows
      tags:
      - User
  /user/list_of_followers:
    get:
      consumes:
      - application/json
      description: Retrieve the list of followers for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Followers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: List of Followers
      tags:
      - User
  /user/list_of_followers_by_username/{username}:
    get:
      consumes:
      - application/json
      description: Retrieve the list of followers for a user
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Followers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: List of Followers
      tags:
      - User
  /user/list_of_following:
    get:
      consumes:
      - application/json
      description: Retrieve the list of users that a specific user is following
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Followings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: List of Following Users
      tags:
      - User
  /user/list_of_following_by_username/{username}:
    get:
      consumes:
      - application/json
      description: Retrieve the list of users that a specific user is following
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Followings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: List of Following Users
      tags:
      - User
  /user/most_popular:
    get:
      consumes:
      - application/json
      description: Retrieve the most popular user based on criteria
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Most Popular User
      tags:
      - User
  /user/unfollow:
    delete:
      consumes:
      - application/json
      description: Unfollow a user
      parameters:
      - description: put user
        in: body
        name: Unfollow
        required: true
        schema:
          $ref: '#/definitions/models.FollowReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DFollowRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Unfollow User
      tags:
      - User
  /user/update_profile:
    put:
      consumes:
      - application/json
      description: Update user profile details
      parameters:
      - description: Update user profile
        in: body
        name: UpdateProfile
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Update User Profile
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
