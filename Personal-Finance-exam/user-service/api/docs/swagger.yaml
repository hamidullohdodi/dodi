definitions:
  auth.LoginUserReq:
    properties:
      FirstName:
        type: string
      Password:
        type: string
    type: object
  auth.RegisterUserReq:
    properties:
      DateOfBirth:
        type: string
      Email:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Password:
        type: string
      Role:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password_hash:
        type: string
    type: object
info:
  contact: {}
  description: API for Authentication Service
  title: Authentication Service API
  version: "1.0"
paths:
  /LogoutUser:
    put:
      consumes:
      - application/json
      description: LogoutUser a user
      parameters:
      - description: LogoutUser Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: logout success
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: LogoutUser a user
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.LoginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
